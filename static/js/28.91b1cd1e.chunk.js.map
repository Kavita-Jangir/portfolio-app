{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/brainfuck.js"],"names":["__webpack_require__","r","__webpack_exports__","d","brainfuck","reserve","split","name","startState","commentLine","left","right","commentLoop","token","stream","state","eatSpace","sol","ch","next","toString","indexOf","eol"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAA,WAAAC,MAAA,IAcOF,EAAA,CACPG,KAAA,YACAC,WAAA,WACA,OACAC,aAAA,EACAC,KAAA,EACAC,MAAA,EACAC,aAAA,IAGAC,MAAA,SAAAC,EAAAC,GACA,GAAAD,EAAAE,WAAA,YACAF,EAAAG,QACAF,EAAAN,aAAA,GAEA,IAAAS,EAAAJ,EAAAK,OAAAC,WACA,WAAAf,EAAAgB,QAAAH,IAsBAH,EAAAN,aAAA,EACAK,EAAAQ,QACAP,EAAAN,aAAA,GAEA,YAzBA,IAAAM,EAAAN,aACAK,EAAAQ,QACAP,EAAAN,aAAA,GAEA,WAEA,MAAAS,GAAA,MAAAA,GACA,MAAAA,EACAH,EAAAL,OAEAK,EAAAJ,QAEA,WACO,MAAAO,GAAA,MAAAA,EACP,UACO,MAAAA,GAAA,MAAAA,EACP,OACO,MAAAA,GAAA,MAAAA,EACP,WASAJ,EAAAQ,QACAP,EAAAN,aAAA","file":"static/js/28.91b1cd1e.chunk.js","sourcesContent":["var reserve = \"><+-.,[]\".split(\"\");\n/*\n  comments can be either:\n  placed behind lines\n\n  +++    this is a comment\n\n  where reserved characters cannot be used\n  or in a loop\n  [\n  this is ok to use [ ] and stuff\n  ]\n  or preceded by #\n*/\nexport var brainfuck = {\n  name: \"brainfuck\",\n  startState: function startState() {\n    return {\n      commentLine: false,\n      left: 0,\n      right: 0,\n      commentLoop: false\n    };\n  },\n  token: function token(stream, state) {\n    if (stream.eatSpace()) return null;\n    if (stream.sol()) {\n      state.commentLine = false;\n    }\n    var ch = stream.next().toString();\n    if (reserve.indexOf(ch) !== -1) {\n      if (state.commentLine === true) {\n        if (stream.eol()) {\n          state.commentLine = false;\n        }\n        return \"comment\";\n      }\n      if (ch === \"]\" || ch === \"[\") {\n        if (ch === \"[\") {\n          state.left++;\n        } else {\n          state.right++;\n        }\n        return \"bracket\";\n      } else if (ch === \"+\" || ch === \"-\") {\n        return \"keyword\";\n      } else if (ch === \"<\" || ch === \">\") {\n        return \"atom\";\n      } else if (ch === \".\" || ch === \",\") {\n        return \"def\";\n      }\n    } else {\n      state.commentLine = true;\n      if (stream.eol()) {\n        state.commentLine = false;\n      }\n      return \"comment\";\n    }\n    if (stream.eol()) {\n      state.commentLine = false;\n    }\n  }\n};"],"sourceRoot":""}