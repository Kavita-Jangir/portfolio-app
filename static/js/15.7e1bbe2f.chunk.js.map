{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/simple-mode.js","D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/nsis.js"],"names":["simpleMode","states","ensureState","states_","meta","languageData","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","name","startState","pending","copyState","s","slice","stack","token","tokenFunction","indentFunction","Error","next","this","regex","val","caret","flags","RegExp","ignoreCase","source","String","toRegex","apply","replace","result","asToken","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec","__webpack_require__","d","__webpack_exports__","r","nsis","_simple_mode_js__WEBPACK_IMPORTED_MODULE_0__","Object","start","comment","indentOnInput","commentTokens","line","block","open","close"],"mappings":"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","file":"static/js/15.7e1bbe2f.chunk.js","sourcesContent":["export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {},\n    meta = states.languageData || {},\n    hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [],\n      orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function startState() {\n      return {\n        state: \"start\",\n        pending: null,\n        indent: hasIndentation ? [] : null\n      };\n    },\n    copyState: function copyState(state) {\n      var s = {\n        state: state.state,\n        pending: state.pending,\n        indent: state.indent && state.indent.slice(0)\n      };\n      if (state.stack) s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  };\n}\n;\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val;\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\nfunction tokenFunction(states) {\n  return function (stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n        if (rule.data.indent) state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent) state.indent.pop();\n        var token = rule.token;\n        if (token && token.apply) token = token(matches);\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++) if (matches[j]) state.pending.push({\n            text: matches[j],\n            token: rule.token[j - 1]\n          });\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\nfunction indentFunction(states, meta) {\n  return function (state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1) return null;\n    var pos = state.indent.length - 1,\n      rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}","import { simpleMode } from \"./simple-mode.js\";\nexport var nsis = simpleMode({\n  start: [\n  // Numbers\n  {\n    regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/,\n    token: \"number\"\n  },\n  // Strings\n  {\n    regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n    token: \"string\"\n  }, {\n    regex: /'(?:[^\\\\']|\\\\.)*'?/,\n    token: \"string\"\n  }, {\n    regex: /`(?:[^\\\\`]|\\\\.)*`?/,\n    token: \"string\"\n  },\n  // Compile Time Commands\n  {\n    regex: /^\\s*(?:\\!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\\b/i,\n    token: \"keyword\"\n  },\n  // Conditional Compilation\n  {\n    regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/i,\n    token: \"keyword\",\n    indent: true\n  }, {\n    regex: /^\\s*(?:\\!(else|endif|macroend))\\b/i,\n    token: \"keyword\",\n    dedent: true\n  },\n  // Runtime Commands\n  {\n    regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/i,\n    token: \"keyword\"\n  }, {\n    regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/i,\n    token: \"keyword\",\n    indent: true\n  }, {\n    regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/i,\n    token: \"keyword\",\n    dedent: true\n  },\n  // Command Options\n  {\n    regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/i,\n    token: \"atom\"\n  }, {\n    regex: /\\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\\b/i,\n    token: \"builtin\"\n  },\n  // LogicLib.nsh\n  {\n    regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/i,\n    token: \"variable-2\",\n    indent: true\n  },\n  // FileFunc.nsh\n  {\n    regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/i,\n    token: \"variable-2\",\n    dedent: true\n  },\n  // Memento.nsh\n  {\n    regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/i,\n    token: \"variable-2\",\n    dedent: true\n  },\n  // TextFunc.nsh\n  {\n    regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/i,\n    token: \"variable-2\",\n    dedent: true\n  },\n  // WinVer.nsh\n  {\n    regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/i,\n    token: \"variable\",\n    dedent: true\n  },\n  // WordFunc.nsh\n  {\n    regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/i,\n    token: \"keyword\",\n    dedent: true\n  },\n  // x64.nsh\n  {\n    regex: /\\$\\{(?:RunningX64)\\}/i,\n    token: \"variable\",\n    dedent: true\n  }, {\n    regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/i,\n    token: \"keyword\",\n    dedent: true\n  },\n  // Line Comment\n  {\n    regex: /(#|;).*/,\n    token: \"comment\"\n  },\n  // Block Comment\n  {\n    regex: /\\/\\*/,\n    token: \"comment\",\n    next: \"comment\"\n  },\n  // Operator\n  {\n    regex: /[-+\\/*=<>!]+/,\n    token: \"operator\"\n  },\n  // Variable\n  {\n    regex: /\\$\\w[\\w\\.]*/,\n    token: \"variable\"\n  },\n  // Constant\n  {\n    regex: /\\${[\\!\\w\\.:-]+}/,\n    token: \"variableName.constant\"\n  },\n  // Language String\n  {\n    regex: /\\$\\([\\!\\w\\.:-]+\\)/,\n    token: \"atom\"\n  }],\n  comment: [{\n    regex: /.*?\\*\\//,\n    token: \"comment\",\n    next: \"start\"\n  }, {\n    regex: /.*/,\n    token: \"comment\"\n  }],\n  languageData: {\n    name: \"nsis\",\n    indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/i,\n    commentTokens: {\n      line: \"#\",\n      block: {\n        open: \"/*\",\n        close: \"*/\"\n      }\n    }\n  }\n});"],"sourceRoot":""}