{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/troff.js"],"names":["__webpack_require__","r","__webpack_exports__","d","troff","words","tokenize","stream","state","tokens","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","hasOwnProperty","name","startState","token"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAA,GA8CA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAAC,OAAA,IA9CA,SAAAF,GACA,GAAAA,EAAAG,WAAA,YACA,IAAAC,EAAAJ,EAAAI,MACAC,EAAAL,EAAAM,OACA,UAAAD,EACA,OAAAL,EAAAO,MAAA,OAAAP,EAAAO,MAAA,OAAAP,EAAAO,MAAA,OAAAP,EAAAO,MAAA,MAAAP,EAAAO,MAAA,MAAAP,EAAAO,MAAA,MAAAP,EAAAO,MAAA,KACA,SAEAP,EAAAO,MAAA,OACAP,EAAAQ,OAAA,KACAR,EAAAM,OACA,UAEAN,EAAAO,MAAA,OAAAP,EAAAO,MAAA,OACAP,EAAAS,SAAA,SACA,UAEAT,EAAAO,MAAA,MAAAP,EAAAO,MAAA,OACAP,EAAAS,SAAA,SACA,UAEA,SAEA,GAAAL,IAAA,MAAAC,GAAA,MAAAA,IACAL,EAAAU,IAAA,OAAAV,EAAAU,IAAA,KAEA,OADAV,EAAAW,YACA,UAGA,GAAAP,GAAA,MAAAC,EAAA,CACA,GAAAL,EAAAO,MAAA,OAAAP,EAAAO,MAAA,OAAAP,EAAAO,MAAA,MACA,kBAEA,GAAAP,EAAAO,MAAA,QAAAP,EAAAO,MAAA,QAAAP,EAAAO,MAAA,QAAAP,EAAAO,MAAA,OAEA,OADAP,EAAAW,YACA,QAEA,GAAAX,EAAAO,MAAA,UAAAP,EAAAO,MAAA,UAAAP,EAAAO,MAAA,UAAAP,EAAAO,MAAA,SACA,kBAGAP,EAAAS,SAAA,SACA,IAAAG,EAAAZ,EAAAa,UACA,OAAAf,EAAAgB,eAAAF,GAAAd,EAAAc,GAAA,OAGAZ,EAAAC,GAGO,IAAAJ,EAAA,CACPkB,KAAA,QACAC,WAAA,WACA,OACAd,OAAA,KAGAe,MAAA,SAAAjB,EAAAC,GACA,OAAAF,EAAAC,EAAAC","file":"static/js/96.2c179c70.chunk.js","sourcesContent":["var words = {};\nfunction tokenBase(stream) {\n  if (stream.eatSpace()) return null;\n  var sol = stream.sol();\n  var ch = stream.next();\n  if (ch === '\\\\') {\n    if (stream.match('fB') || stream.match('fR') || stream.match('fI') || stream.match('u') || stream.match('d') || stream.match('%') || stream.match('&')) {\n      return 'string';\n    }\n    if (stream.match('m[')) {\n      stream.skipTo(']');\n      stream.next();\n      return 'string';\n    }\n    if (stream.match('s+') || stream.match('s-')) {\n      stream.eatWhile(/[\\d-]/);\n      return 'string';\n    }\n    if (stream.match('\\(') || stream.match('*\\(')) {\n      stream.eatWhile(/[\\w-]/);\n      return 'string';\n    }\n    return 'string';\n  }\n  if (sol && (ch === '.' || ch === '\\'')) {\n    if (stream.eat('\\\\') && stream.eat('\\\"')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n  }\n  if (sol && ch === '.') {\n    if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n      return 'attribute';\n    }\n    if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n      stream.skipToEnd();\n      return 'quote';\n    }\n    if (stream.match(/[A-Z]/) && stream.match(/[A-Z]/) || stream.match(/[a-z]/) && stream.match(/[a-z]/)) {\n      return 'attribute';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase)(stream, state);\n}\n;\nexport var troff = {\n  name: \"troff\",\n  startState: function startState() {\n    return {\n      tokens: []\n    };\n  },\n  token: function token(stream, state) {\n    return tokenize(stream, state);\n  }\n};"],"sourceRoot":""}