{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/mirc.js"],"names":["parseWords","str","obj","words","split","i","length","__webpack_require__","r","__webpack_exports__","d","mirc","specials","keywords","functions","isOperatorChar","chain","stream","state","f","tokenize","tokenBase","beforeParams","ch","next","test","inParams","eatWhile","eat","tokenComment","match","tokenUnparsed","propertyIsEnumerable","current","toLowerCase","word","skipToEnd","maybeEnd","name","startState","token","eatSpace"],"mappings":"2FAAA,SAAAA,EAAAC,GAGA,IAFA,IAAAC,EAAA,GACAC,EAAAF,EAAAG,MAAA,KACAC,EAAA,EAAiBA,EAAAF,EAAAG,SAAkBD,EAAAH,EAAAC,EAAAE,KAAA,EACnC,OAAAH,EAJAK,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,yBAAAE,IAMA,IAAAC,EAAAZ,EAAA,ohFACAa,EAAAb,EAAA,m0DACAc,EAAAd,EAAA,kEACAe,EAAA,qBACA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,OADAD,EAAAE,SAAAD,EACAA,EAAAF,EAAAC,GAEA,SAAAG,EAAAJ,EAAAC,GACA,IAAAI,EAAAJ,EAAAI,aACAJ,EAAAI,cAAA,EACA,IAAAC,EAAAN,EAAAO,OACA,qBAAcC,KAAAF,GAEd,MADA,KAAAA,GAAAD,EAAAJ,EAAAQ,UAAA,EAAyD,KAAAH,IAAAL,EAAAQ,UAAA,GACzD,KACG,QAAAD,KAAAF,GAEH,OADAN,EAAAU,SAAA,UACA,SACG,SAAAJ,EAGH,OAFAN,EAAAW,IAAA,MACAX,EAAAW,IAAA,KACA,SACG,QAAAL,GAAAN,EAAAW,IAAA,KACH,OAAAZ,EAAAC,EAAAC,EAAAW,GACG,QAAAN,GAAkBN,EAAAa,MAAA,YACrB,OAAAd,EAAAC,EAAAC,EAAAa,GACG,QAAAR,GAAkBL,EAAAQ,SAGlB,SAAAH,EAEH,OADAN,EAAAW,IAAA,KACA,UACG,QAAAL,EAEH,OADAN,EAAAU,SAAA,oBACAf,KAAAoB,qBAAAf,EAAAgB,UAAAC,eACA,WAEAhB,EAAAI,cAAA,EACA,WAEG,QAAAC,EAGH,OAFAN,EAAAU,SAAA,YACAT,EAAAI,cAAA,EACA,SACG,GAAAP,EAAAU,KAAAF,GAEH,OADAN,EAAAU,SAAAZ,GACA,WAEAE,EAAAU,SAAA,aACA,IAAAQ,EAAAlB,EAAAgB,UAAAC,cACA,OAAArB,KAAAmB,qBAAAG,GAAA,UACArB,KAAAkB,qBAAAG,IACAjB,EAAAI,cAAA,EACA,WAEA,KA3BA,OADAL,EAAAmB,YACA,UA8BA,SAAAP,EAAAZ,EAAAC,GAGA,IAFA,IACAK,EADAc,GAAA,EAEAd,EAAAN,EAAAO,QAAA,CACA,QAAAD,GAAAc,EAAA,CACAnB,EAAAE,SAAAC,EACA,MAEAgB,EAAA,KAAAd,EAEA,gBAEA,SAAAQ,EAAAd,EAAAC,GAGA,IAFA,IACAK,EADAc,EAAA,EAEAd,EAAAN,EAAAO,QAAA,CACA,QAAAD,GAAgB,GAAAc,EAAA,CAChBnB,EAAAE,SAAAC,EACA,MAEA,KAAAE,EAAAc,IAA8B,KAAAd,IAAAc,EAAA,GAE9B,aAEO,IAAA1B,EAAA,CACP2B,KAAA,OACAC,WAAA,WACA,OACAnB,SAAAC,EACAC,cAAA,EACAI,UAAA,IAGAc,MAAA,SAAAvB,EAAAC,GACA,OAAAD,EAAAwB,WAAA,KACAvB,EAAAE,SAAAH,EAAAC","file":"static/js/61.11060426.chunk.js","sourcesContent":["function parseWords(str) {\n  var obj = {},\n    words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar specials = parseWords(\"$! $$ $& $? $+ $abook $abs $active $activecid \" + \"$activewid $address $addtok $agent $agentname $agentstat $agentver \" + \"$alias $and $anick $ansi2mirc $aop $appactive $appstate $asc $asctime \" + \"$asin $atan $avoice $away $awaymsg $awaytime $banmask $base $bfind \" + \"$binoff $biton $bnick $bvar $bytes $calc $cb $cd $ceil $chan $chanmodes \" + \"$chantypes $chat $chr $cid $clevel $click $cmdbox $cmdline $cnick $color \" + \"$com $comcall $comchan $comerr $compact $compress $comval $cos $count \" + \"$cr $crc $creq $crlf $ctime $ctimer $ctrlenter $date $day $daylight \" + \"$dbuh $dbuw $dccignore $dccport $dde $ddename $debug $decode $decompress \" + \"$deltok $devent $dialog $did $didreg $didtok $didwm $disk $dlevel $dll \" + \"$dllcall $dname $dns $duration $ebeeps $editbox $emailaddr $encode $error \" + \"$eval $event $exist $feof $ferr $fgetc $file $filename $filtered $finddir \" + \"$finddirn $findfile $findfilen $findtok $fline $floor $fopen $fread $fserve \" + \"$fulladdress $fulldate $fullname $fullscreen $get $getdir $getdot $gettok $gmt \" + \"$group $halted $hash $height $hfind $hget $highlight $hnick $hotline \" + \"$hotlinepos $ial $ialchan $ibl $idle $iel $ifmatch $ignore $iif $iil \" + \"$inelipse $ini $inmidi $inpaste $inpoly $input $inrect $inroundrect \" + \"$insong $instok $int $inwave $ip $isalias $isbit $isdde $isdir $isfile \" + \"$isid $islower $istok $isupper $keychar $keyrpt $keyval $knick $lactive \" + \"$lactivecid $lactivewid $left $len $level $lf $line $lines $link $lock \" + \"$lock $locked $log $logstamp $logstampfmt $longfn $longip $lower $ltimer \" + \"$maddress $mask $matchkey $matchtok $md5 $me $menu $menubar $menucontext \" + \"$menutype $mid $middir $mircdir $mircexe $mircini $mklogfn $mnick $mode \" + \"$modefirst $modelast $modespl $mouse $msfile $network $newnick $nick $nofile \" + \"$nopath $noqt $not $notags $notify $null $numeric $numok $oline $onpoly \" + \"$opnick $or $ord $os $passivedcc $pic $play $pnick $port $portable $portfree \" + \"$pos $prefix $prop $protect $puttok $qt $query $rand $r $rawmsg $read $readomo \" + \"$readn $regex $regml $regsub $regsubex $remove $remtok $replace $replacex \" + \"$reptok $result $rgb $right $round $scid $scon $script $scriptdir $scriptline \" + \"$sdir $send $server $serverip $sfile $sha1 $shortfn $show $signal $sin \" + \"$site $sline $snick $snicks $snotify $sock $sockbr $sockerr $sockname \" + \"$sorttok $sound $sqrt $ssl $sreq $sslready $status $strip $str $stripped \" + \"$syle $submenu $switchbar $tan $target $ticks $time $timer $timestamp \" + \"$timestampfmt $timezone $tip $titlebar $toolbar $treebar $trust $ulevel \" + \"$ulist $upper $uptime $url $usermode $v1 $v2 $var $vcmd $vcmdstat $vcmdver \" + \"$version $vnick $vol $wid $width $wildsite $wildtok $window $wrap $xor\");\nvar keywords = parseWords(\"abook ajinvite alias aline ame amsg anick aop auser autojoin avoice \" + \"away background ban bcopy beep bread break breplace bset btrunc bunset bwrite \" + \"channel clear clearall cline clipboard close cnick color comclose comopen \" + \"comreg continue copy creq ctcpreply ctcps dcc dccserver dde ddeserver \" + \"debug dec describe dialog did didtok disable disconnect dlevel dline dll \" + \"dns dqwindow drawcopy drawdot drawfill drawline drawpic drawrect drawreplace \" + \"drawrot drawsave drawscroll drawtext ebeeps echo editbox emailaddr enable \" + \"events exit fclose filter findtext finger firewall flash flist flood flush \" + \"flushini font fopen fseek fsend fserve fullname fwrite ghide gload gmove \" + \"gopts goto gplay gpoint gqreq groups gshow gsize gstop gtalk gunload hadd \" + \"halt haltdef hdec hdel help hfree hinc hload hmake hop hsave ial ialclear \" + \"ialmark identd if ignore iline inc invite iuser join kick linesep links list \" + \"load loadbuf localinfo log mdi me menubar mkdir mnick mode msg nick noop notice \" + \"notify omsg onotice part partall pdcc perform play playctrl pop protect pvoice \" + \"qme qmsg query queryn quit raw reload remini remote remove rename renwin \" + \"reseterror resetidle return rlevel rline rmdir run ruser save savebuf saveini \" + \"say scid scon server set showmirc signam sline sockaccept sockclose socklist \" + \"socklisten sockmark sockopen sockpause sockread sockrename sockudp sockwrite \" + \"sound speak splay sreq strip switchbar timer timestamp titlebar tnick tokenize \" + \"toolbar topic tray treebar ulist unload unset unsetall updatenl url uwho \" + \"var vcadd vcmd vcrem vol while whois window winhelp write writeint if isalnum \" + \"isalpha isaop isavoice isban ischan ishop isignore isin isincs isletter islower \" + \"isnotify isnum ison isop isprotect isreg isupper isvoice iswm iswmcs \" + \"elseif else goto menu nicklist status title icon size option text edit \" + \"button check radio box scroll list combo link tab item\");\nvar functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\nvar isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\nfunction tokenBase(stream, state) {\n  var beforeParams = state.beforeParams;\n  state.beforeParams = false;\n  var ch = stream.next();\n  if (/[\\[\\]{}\\(\\),\\.]/.test(ch)) {\n    if (ch == \"(\" && beforeParams) state.inParams = true;else if (ch == \")\") state.inParams = false;\n    return null;\n  } else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w\\.]/);\n    return \"number\";\n  } else if (ch == \"\\\\\") {\n    stream.eat(\"\\\\\");\n    stream.eat(/./);\n    return \"number\";\n  } else if (ch == \"/\" && stream.eat(\"*\")) {\n    return chain(stream, state, tokenComment);\n  } else if (ch == \";\" && stream.match(/ *\\( *\\(/)) {\n    return chain(stream, state, tokenUnparsed);\n  } else if (ch == \";\" && !state.inParams) {\n    stream.skipToEnd();\n    return \"comment\";\n  } else if (ch == '\"') {\n    stream.eat(/\"/);\n    return \"keyword\";\n  } else if (ch == \"$\") {\n    stream.eatWhile(/[$_a-z0-9A-Z\\.:]/);\n    if (specials && specials.propertyIsEnumerable(stream.current().toLowerCase())) {\n      return \"keyword\";\n    } else {\n      state.beforeParams = true;\n      return \"builtin\";\n    }\n  } else if (ch == \"%\") {\n    stream.eatWhile(/[^,\\s()]/);\n    state.beforeParams = true;\n    return \"string\";\n  } else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  } else {\n    stream.eatWhile(/[\\w\\$_{}]/);\n    var word = stream.current().toLowerCase();\n    if (keywords && keywords.propertyIsEnumerable(word)) return \"keyword\";\n    if (functions && functions.propertyIsEnumerable(word)) {\n      state.beforeParams = true;\n      return \"keyword\";\n    }\n    return null;\n  }\n}\nfunction tokenComment(stream, state) {\n  var maybeEnd = false,\n    ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = ch == \"*\";\n  }\n  return \"comment\";\n}\nfunction tokenUnparsed(stream, state) {\n  var maybeEnd = 0,\n    ch;\n  while (ch = stream.next()) {\n    if (ch == \";\" && maybeEnd == 2) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    if (ch == \")\") maybeEnd++;else if (ch != \" \") maybeEnd = 0;\n  }\n  return \"meta\";\n}\nexport var mirc = {\n  name: \"mirc\",\n  startState: function startState() {\n    return {\n      tokenize: tokenBase,\n      beforeParams: false,\n      inParams: false\n    };\n  },\n  token: function token(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  }\n};"],"sourceRoot":""}