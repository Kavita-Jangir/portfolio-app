{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/properties.js"],"names":["__webpack_require__","r","__webpack_exports__","d","properties","name","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipTo","eat","skipToEnd","startState"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,+BAAAE,IAAO,IAAAA,EAAA,CACPC,KAAA,aACAC,MAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAE,OAAAD,EAAAE,aACAC,EAAAJ,EAAAI,MAcA,GAbAH,EAAAE,cAAA,EACAD,IACAD,EAAAI,eACAJ,EAAAK,aAAA,EACAL,EAAAI,eAAA,GAEAJ,EAAAM,SAAA,OAGAH,IAAAH,EAAAI,gBACAJ,EAAAK,aAAA,EACAL,EAAAM,SAAA,OAEAL,EACA,KAAAF,EAAAQ,aAEA,IAAAC,EAAAT,EAAAU,OACA,OAAAR,GAAA,MAAAO,GAAA,MAAAA,GAAA,MAAAA,EAIKP,GAAA,MAAAO,GACLR,EAAAE,cAAA,EACAH,EAAAW,OAAA,KACAX,EAAAY,IAAA,KACA,UACK,MAAAH,GAAA,MAAAA,GACLR,EAAAM,SAAA,QACA,OACK,OAAAE,GAAA,UAAAR,EAAAM,UACLP,EAAAI,QAGAH,EAAAI,eAAA,GAGAJ,EAAAM,WAlBAN,EAAAM,SAAA,UACAP,EAAAa,YACA,YAkBAC,WAAA,WACA,OACAP,SAAA,MAEAF,eAAA,EAEAC,aAAA,EAEAH,cAAA","file":"static/js/72.098f6396.chunk.js","sourcesContent":["export var properties = {\n  name: \"properties\",\n  token: function token(stream, state) {\n    var sol = stream.sol() || state.afterSection;\n    var eol = stream.eol();\n    state.afterSection = false;\n    if (sol) {\n      if (state.nextMultiline) {\n        state.inMultiline = true;\n        state.nextMultiline = false;\n      } else {\n        state.position = \"def\";\n      }\n    }\n    if (eol && !state.nextMultiline) {\n      state.inMultiline = false;\n      state.position = \"def\";\n    }\n    if (sol) {\n      while (stream.eatSpace()) {}\n    }\n    var ch = stream.next();\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n      state.position = \"comment\";\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (sol && ch === \"[\") {\n      state.afterSection = true;\n      stream.skipTo(\"]\");\n      stream.eat(\"]\");\n      return \"header\";\n    } else if (ch === \"=\" || ch === \":\") {\n      state.position = \"quote\";\n      return null;\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\n      if (stream.eol()) {\n        // end of line?\n        // Multiline value\n        state.nextMultiline = true;\n      }\n    }\n    return state.position;\n  },\n  startState: function startState() {\n    return {\n      position: \"def\",\n      // Current position, \"def\", \"quote\" or \"comment\"\n      nextMultiline: false,\n      // Is the next line multiline value\n      inMultiline: false,\n      // Is the current line a multiline value\n      afterSection: false // Did we just open a section\n    };\n  }\n};"],"sourceRoot":""}