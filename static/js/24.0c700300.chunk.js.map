{"version":3,"sources":["D:/react_app/app_1/node_modules/@codemirror/legacy-modes/mode/apl.js"],"names":["__webpack_require__","r","__webpack_exports__","d","apl","builtInFuncs","+","−","×","÷","⌈","⌊","∣","⍳","?","⋆","⍟","○","!","⌹","<","≤","=",">","≥","≠","≡","≢","∈","⍷","∪","∩","∼","∨","∧","⍱","⍲","⍴",",","⍪","⌽","⊖","⍉","↑","↓","⊂","⊃","⌷","⍋","⍒","⊤","⊥","⍕","⍎","⊣","⊢","isOperator","isNiladic","isFunction","isArrow","isComment","name","startState","prev","func","op","string","escape","token","stream","state","ch","eatSpace","next","eatWhile","type","c","stringEater","test","skipToEnd","peek"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,wBAAAE,IAAA,IAAAC,EAAA,CACAC,IAAA,oBACAC,SAAA,sBACAC,OAAA,sBACAC,OAAA,wBACAC,SAAA,wBACAC,SAAA,qBACAC,SAAA,uBACAC,SAAA,4BACAC,IAAA,gBACAC,SAAA,gCACAC,SAAA,8BACAC,SAAA,4BACAC,IAAA,yBACAC,SAAA,iCACAC,IAAA,kBACAC,SAAA,yBACAC,IAAA,gBACAC,IAAA,qBACAC,SAAA,4BACAC,SAAA,kBACAC,SAAA,kBACAC,SAAA,kBACAC,SAAA,wBACAC,SAAA,cACAC,SAAA,mBACAC,SAAA,sBACAC,SAAA,kBACAC,SAAA,YACAC,SAAA,aACAC,SAAA,aACAC,SAAA,cACAC,SAAA,sBACAC,IAAA,qBACAC,SAAA,2BACAC,SAAA,qBACAC,SAAA,+BACAC,SAAA,mBACAC,SAAA,iBACAC,SAAA,cACAC,SAAA,gCACAC,SAAA,mBACAC,SAAA,eACAC,SAAA,iBACAC,SAAA,mBACAC,SAAA,gBACAC,SAAA,gBACAC,SAAA,6BACAC,SAAA,iBACAC,SAAA,gBACAC,SAAA,kBAEAC,EAAA,+BACAC,EAAA,SACAC,EAAA,4QACAC,EAAA,SACAC,EAAA,eAYOxD,EAAA,CACPyD,KAAA,MACAC,WAAA,WACA,OACAC,MAAA,EACAC,MAAA,EACAC,IAAA,EACAC,QAAA,EACAC,QAAA,IAGAC,MAAA,SAAAC,EAAAC,GACA,IAAAC,EACA,OAAAF,EAAAG,WACA,KAGA,OADAD,EAAAF,EAAAI,SACA,MAAAF,GACAF,EAAAK,SA7BA,SAAAC,GACA,IAAAZ,EAEA,OADAA,GAAA,EACA,SAAAa,GAEA,OADAb,EAAAa,EACAA,IAAAD,GACA,OAAAZ,GAuBAc,CAAAN,IACAF,EAAAI,OACAH,EAAAP,MAAA,EACA,UAEA,UAAae,KAAAP,IACbD,EAAAP,MAAA,EACA,MAEA,UAAae,KAAAP,IACbD,EAAAP,MAAA,EACA,MAEAN,EAAAqB,KAAAP,IACAD,EAAAP,MAAA,EACA,QAEA,WAAAe,KAAAP,IACAD,EAAAN,MACAM,EAAAN,MAAA,EACAM,EAAAP,MAAA,GAEAO,EAAAP,MAAA,EAEAM,EAAAK,SAAA,UACA,UAEAlB,EAAAsB,KAAAP,GACA,WAEAZ,EAAAmB,KAAAP,GACA,WAEAb,EAAAoB,KAAAP,IACAD,EAAAN,MAAA,EACAM,EAAAP,MAAA,EACA1D,EAAAkE,GAAA,0DAEAX,EAAAkB,KAAAP,IACAF,EAAAU,YACA,WAEA,WAAAR,GAAA,MAAAF,EAAAW,QACAX,EAAAI,OACA,0BAEAJ,EAAAK,SAAA,WACAJ,EAAAP,MAAA,EACA","file":"static/js/24.0c700300.chunk.js","sourcesContent":["var builtInFuncs = {\n  \"+\": [\"conjugate\", \"add\"],\n  \"−\": [\"negate\", \"subtract\"],\n  \"×\": [\"signOf\", \"multiply\"],\n  \"÷\": [\"reciprocal\", \"divide\"],\n  \"⌈\": [\"ceiling\", \"greaterOf\"],\n  \"⌊\": [\"floor\", \"lesserOf\"],\n  \"∣\": [\"absolute\", \"residue\"],\n  \"⍳\": [\"indexGenerate\", \"indexOf\"],\n  \"?\": [\"roll\", \"deal\"],\n  \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n  \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n  \"○\": [\"piTimes\", \"circularFuncs\"],\n  \"!\": [\"factorial\", \"binomial\"],\n  \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n  \"<\": [null, \"lessThan\"],\n  \"≤\": [null, \"lessThanOrEqual\"],\n  \"=\": [null, \"equals\"],\n  \">\": [null, \"greaterThan\"],\n  \"≥\": [null, \"greaterThanOrEqual\"],\n  \"≠\": [null, \"notEqual\"],\n  \"≡\": [\"depth\", \"match\"],\n  \"≢\": [null, \"notMatch\"],\n  \"∈\": [\"enlist\", \"membership\"],\n  \"⍷\": [null, \"find\"],\n  \"∪\": [\"unique\", \"union\"],\n  \"∩\": [null, \"intersection\"],\n  \"∼\": [\"not\", \"without\"],\n  \"∨\": [null, \"or\"],\n  \"∧\": [null, \"and\"],\n  \"⍱\": [null, \"nor\"],\n  \"⍲\": [null, \"nand\"],\n  \"⍴\": [\"shapeOf\", \"reshape\"],\n  \",\": [\"ravel\", \"catenate\"],\n  \"⍪\": [null, \"firstAxisCatenate\"],\n  \"⌽\": [\"reverse\", \"rotate\"],\n  \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n  \"⍉\": [\"transpose\", null],\n  \"↑\": [\"first\", \"take\"],\n  \"↓\": [null, \"drop\"],\n  \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n  \"⊃\": [\"diclose\", \"pick\"],\n  \"⌷\": [null, \"index\"],\n  \"⍋\": [\"gradeUp\", null],\n  \"⍒\": [\"gradeDown\", null],\n  \"⊤\": [\"encode\", null],\n  \"⊥\": [\"decode\", null],\n  \"⍕\": [\"format\", \"formatByExample\"],\n  \"⍎\": [\"execute\", null],\n  \"⊣\": [\"stop\", \"left\"],\n  \"⊢\": [\"pass\", \"right\"]\n};\nvar isOperator = /[\\.\\/⌿⍀¨⍣]/;\nvar isNiladic = /⍬/;\nvar isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\nvar isArrow = /←/;\nvar isComment = /[⍝#].*$/;\nvar stringEater = function stringEater(type) {\n  var prev;\n  prev = false;\n  return function (c) {\n    prev = c;\n    if (c === type) {\n      return prev === \"\\\\\";\n    }\n    return true;\n  };\n};\nexport var apl = {\n  name: \"apl\",\n  startState: function startState() {\n    return {\n      prev: false,\n      func: false,\n      op: false,\n      string: false,\n      escape: false\n    };\n  },\n  token: function token(stream, state) {\n    var ch;\n    if (stream.eatSpace()) {\n      return null;\n    }\n    ch = stream.next();\n    if (ch === '\"' || ch === \"'\") {\n      stream.eatWhile(stringEater(ch));\n      stream.next();\n      state.prev = true;\n      return \"string\";\n    }\n    if (/[\\[{\\(]/.test(ch)) {\n      state.prev = false;\n      return null;\n    }\n    if (/[\\]}\\)]/.test(ch)) {\n      state.prev = true;\n      return null;\n    }\n    if (isNiladic.test(ch)) {\n      state.prev = false;\n      return \"atom\";\n    }\n    if (/[¯\\d]/.test(ch)) {\n      if (state.func) {\n        state.func = false;\n        state.prev = false;\n      } else {\n        state.prev = true;\n      }\n      stream.eatWhile(/[\\w\\.]/);\n      return \"number\";\n    }\n    if (isOperator.test(ch)) {\n      return \"operator\";\n    }\n    if (isArrow.test(ch)) {\n      return \"operator\";\n    }\n    if (isFunction.test(ch)) {\n      state.func = true;\n      state.prev = false;\n      return builtInFuncs[ch] ? \"variableName.function.standard\" : \"variableName.function\";\n    }\n    if (isComment.test(ch)) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch === \"∘\" && stream.peek() === \".\") {\n      stream.next();\n      return \"variableName.function\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    state.prev = true;\n    return \"keyword\";\n  }\n};"],"sourceRoot":""}